// Code generated by "enumer -type=SystemColumnName -json -transform=snake-upper -output=./systemcolumnname.gen.go"; DO NOT EDIT.

package enums

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _SystemColumnNameName = "SYSTEM_COLUMN_NAME_STORAGE_FUNDSYSTEM_COLUMN_NAME_REFERENCE_GAS_PRICESYSTEM_COLUMN_NAME_EPOCH_DURATION_MSSYSTEM_COLUMN_NAME_STAKE_SUBSIDY_COUNTERSYSTEM_COLUMN_NAME_STAKE_SUBSIDY_BALANCESYSTEM_COLUMN_NAME_STAKE_SUBSIDY_CURRENT_EPOCH_AMOUNTSYSTEM_COLUMN_NAME_TOTAL_STAKESYSTEM_COLUMN_NAME_VALIDATORS_COUNTSYSTEM_COLUMN_NAME_VALIDATORS_AT_RISK_COUNT"

var _SystemColumnNameIndex = [...]uint16{0, 31, 69, 105, 145, 185, 238, 268, 303, 346}

const _SystemColumnNameLowerName = "system_column_name_storage_fundsystem_column_name_reference_gas_pricesystem_column_name_epoch_duration_mssystem_column_name_stake_subsidy_countersystem_column_name_stake_subsidy_balancesystem_column_name_stake_subsidy_current_epoch_amountsystem_column_name_total_stakesystem_column_name_validators_countsystem_column_name_validators_at_risk_count"

func (i SystemColumnName) String() string {
	if i < 0 || i >= SystemColumnName(len(_SystemColumnNameIndex)-1) {
		return fmt.Sprintf("SystemColumnName(%d)", i)
	}
	return _SystemColumnNameName[_SystemColumnNameIndex[i]:_SystemColumnNameIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _SystemColumnNameNoOp() {
	var x [1]struct{}
	_ = x[SystemColumnNameStorageFund-(0)]
	_ = x[SystemColumnNameReferenceGasPrice-(1)]
	_ = x[SystemColumnNameEpochDurationMs-(2)]
	_ = x[SystemColumnNameStakeSubsidyCounter-(3)]
	_ = x[SystemColumnNameStakeSubsidyBalance-(4)]
	_ = x[SystemColumnNameStakeSubsidyCurrentEpochAmount-(5)]
	_ = x[SystemColumnNameTotalStake-(6)]
	_ = x[SystemColumnNameValidatorsCount-(7)]
	_ = x[SystemColumnNameValidatorsAtRiskCount-(8)]
}

var _SystemColumnNameValues = []SystemColumnName{SystemColumnNameStorageFund, SystemColumnNameReferenceGasPrice, SystemColumnNameEpochDurationMs, SystemColumnNameStakeSubsidyCounter, SystemColumnNameStakeSubsidyBalance, SystemColumnNameStakeSubsidyCurrentEpochAmount, SystemColumnNameTotalStake, SystemColumnNameValidatorsCount, SystemColumnNameValidatorsAtRiskCount}

var _SystemColumnNameNameToValueMap = map[string]SystemColumnName{
	_SystemColumnNameName[0:31]:         SystemColumnNameStorageFund,
	_SystemColumnNameLowerName[0:31]:    SystemColumnNameStorageFund,
	_SystemColumnNameName[31:69]:        SystemColumnNameReferenceGasPrice,
	_SystemColumnNameLowerName[31:69]:   SystemColumnNameReferenceGasPrice,
	_SystemColumnNameName[69:105]:       SystemColumnNameEpochDurationMs,
	_SystemColumnNameLowerName[69:105]:  SystemColumnNameEpochDurationMs,
	_SystemColumnNameName[105:145]:      SystemColumnNameStakeSubsidyCounter,
	_SystemColumnNameLowerName[105:145]: SystemColumnNameStakeSubsidyCounter,
	_SystemColumnNameName[145:185]:      SystemColumnNameStakeSubsidyBalance,
	_SystemColumnNameLowerName[145:185]: SystemColumnNameStakeSubsidyBalance,
	_SystemColumnNameName[185:238]:      SystemColumnNameStakeSubsidyCurrentEpochAmount,
	_SystemColumnNameLowerName[185:238]: SystemColumnNameStakeSubsidyCurrentEpochAmount,
	_SystemColumnNameName[238:268]:      SystemColumnNameTotalStake,
	_SystemColumnNameLowerName[238:268]: SystemColumnNameTotalStake,
	_SystemColumnNameName[268:303]:      SystemColumnNameValidatorsCount,
	_SystemColumnNameLowerName[268:303]: SystemColumnNameValidatorsCount,
	_SystemColumnNameName[303:346]:      SystemColumnNameValidatorsAtRiskCount,
	_SystemColumnNameLowerName[303:346]: SystemColumnNameValidatorsAtRiskCount,
}

var _SystemColumnNameNames = []string{
	_SystemColumnNameName[0:31],
	_SystemColumnNameName[31:69],
	_SystemColumnNameName[69:105],
	_SystemColumnNameName[105:145],
	_SystemColumnNameName[145:185],
	_SystemColumnNameName[185:238],
	_SystemColumnNameName[238:268],
	_SystemColumnNameName[268:303],
	_SystemColumnNameName[303:346],
}

// SystemColumnNameString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func SystemColumnNameString(s string) (SystemColumnName, error) {
	if val, ok := _SystemColumnNameNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _SystemColumnNameNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to SystemColumnName values", s)
}

// SystemColumnNameValues returns all values of the enum
func SystemColumnNameValues() []SystemColumnName {
	return _SystemColumnNameValues
}

// SystemColumnNameStrings returns a slice of all String values of the enum
func SystemColumnNameStrings() []string {
	strs := make([]string, len(_SystemColumnNameNames))
	copy(strs, _SystemColumnNameNames)
	return strs
}

// IsASystemColumnName returns "true" if the value is listed in the enum definition. "false" otherwise
func (i SystemColumnName) IsASystemColumnName() bool {
	for _, v := range _SystemColumnNameValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for SystemColumnName
func (i SystemColumnName) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for SystemColumnName
func (i *SystemColumnName) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("SystemColumnName should be a string, got %s", data)
	}

	var err error
	*i, err = SystemColumnNameString(s)
	return err
}
