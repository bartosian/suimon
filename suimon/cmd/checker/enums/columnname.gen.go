// Code generated by "enumer -type=ColumnName -json -transform=snake-upper -output=./columnname.gen.go"; DO NOT EDIT.

package enums

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _ColumnNameName = "COLUMN_NAME_HEALTHCOLUMN_NAME_ADDRESSCOLUMN_NAME_PORT_RPCCOLUMN_NAME_TOTAL_TRANSACTIONSCOLUMN_NAME_LATEST_CHECKPOINTCOLUMN_NAME_TOTAL_TRANSACTION_CERTIFICATESCOLUMN_NAME_TOTAL_TRANSACTION_EFFECTSCOLUMN_NAME_HIGHEST_KNOWN_CHECKPOINTCOLUMN_NAME_HIGHEST_SYNCED_CHECKPOINTCOLUMN_NAME_LAST_EXECUTED_CHECKPOINTCOLUMN_NAME_CHECKPOINT_EXEC_BACKLOGCOLUMN_NAME_CHECKPOINT_SYNC_BACKLOGCOLUMN_NAME_CURRENT_EPOCHCOLUMN_NAME_TX_SYNC_PERCENTAGECOLUMN_NAME_CHECK_SYNC_PERCENTAGECOLUMN_NAME_NETWORK_PEERSCOLUMN_NAME_UPTIMECOLUMN_NAME_VERSIONCOLUMN_NAME_COMMITCOLUMN_NAME_COUNTRY"

var _ColumnNameIndex = [...]uint16{0, 18, 37, 57, 87, 116, 158, 195, 231, 268, 304, 339, 374, 399, 429, 462, 487, 505, 524, 542, 561}

const _ColumnNameLowerName = "column_name_healthcolumn_name_addresscolumn_name_port_rpccolumn_name_total_transactionscolumn_name_latest_checkpointcolumn_name_total_transaction_certificatescolumn_name_total_transaction_effectscolumn_name_highest_known_checkpointcolumn_name_highest_synced_checkpointcolumn_name_last_executed_checkpointcolumn_name_checkpoint_exec_backlogcolumn_name_checkpoint_sync_backlogcolumn_name_current_epochcolumn_name_tx_sync_percentagecolumn_name_check_sync_percentagecolumn_name_network_peerscolumn_name_uptimecolumn_name_versioncolumn_name_commitcolumn_name_country"

func (i ColumnName) String() string {
	if i < 0 || i >= ColumnName(len(_ColumnNameIndex)-1) {
		return fmt.Sprintf("ColumnName(%d)", i)
	}
	return _ColumnNameName[_ColumnNameIndex[i]:_ColumnNameIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ColumnNameNoOp() {
	var x [1]struct{}
	_ = x[ColumnNameHealth-(0)]
	_ = x[ColumnNameAddress-(1)]
	_ = x[ColumnNamePortRPC-(2)]
	_ = x[ColumnNameTotalTransactions-(3)]
	_ = x[ColumnNameLatestCheckpoint-(4)]
	_ = x[ColumnNameTotalTransactionCertificates-(5)]
	_ = x[ColumnNameTotalTransactionEffects-(6)]
	_ = x[ColumnNameHighestKnownCheckpoint-(7)]
	_ = x[ColumnNameHighestSyncedCheckpoint-(8)]
	_ = x[ColumnNameLastExecutedCheckpoint-(9)]
	_ = x[ColumnNameCheckpointExecBacklog-(10)]
	_ = x[ColumnNameCheckpointSyncBacklog-(11)]
	_ = x[ColumnNameCurrentEpoch-(12)]
	_ = x[ColumnNameTXSyncPercentage-(13)]
	_ = x[ColumnNameCheckSyncPercentage-(14)]
	_ = x[ColumnNameNetworkPeers-(15)]
	_ = x[ColumnNameUptime-(16)]
	_ = x[ColumnNameVersion-(17)]
	_ = x[ColumnNameCommit-(18)]
	_ = x[ColumnNameCountry-(19)]
}

var _ColumnNameValues = []ColumnName{ColumnNameHealth, ColumnNameAddress, ColumnNamePortRPC, ColumnNameTotalTransactions, ColumnNameLatestCheckpoint, ColumnNameTotalTransactionCertificates, ColumnNameTotalTransactionEffects, ColumnNameHighestKnownCheckpoint, ColumnNameHighestSyncedCheckpoint, ColumnNameLastExecutedCheckpoint, ColumnNameCheckpointExecBacklog, ColumnNameCheckpointSyncBacklog, ColumnNameCurrentEpoch, ColumnNameTXSyncPercentage, ColumnNameCheckSyncPercentage, ColumnNameNetworkPeers, ColumnNameUptime, ColumnNameVersion, ColumnNameCommit, ColumnNameCountry}

var _ColumnNameNameToValueMap = map[string]ColumnName{
	_ColumnNameName[0:18]:         ColumnNameHealth,
	_ColumnNameLowerName[0:18]:    ColumnNameHealth,
	_ColumnNameName[18:37]:        ColumnNameAddress,
	_ColumnNameLowerName[18:37]:   ColumnNameAddress,
	_ColumnNameName[37:57]:        ColumnNamePortRPC,
	_ColumnNameLowerName[37:57]:   ColumnNamePortRPC,
	_ColumnNameName[57:87]:        ColumnNameTotalTransactions,
	_ColumnNameLowerName[57:87]:   ColumnNameTotalTransactions,
	_ColumnNameName[87:116]:       ColumnNameLatestCheckpoint,
	_ColumnNameLowerName[87:116]:  ColumnNameLatestCheckpoint,
	_ColumnNameName[116:158]:      ColumnNameTotalTransactionCertificates,
	_ColumnNameLowerName[116:158]: ColumnNameTotalTransactionCertificates,
	_ColumnNameName[158:195]:      ColumnNameTotalTransactionEffects,
	_ColumnNameLowerName[158:195]: ColumnNameTotalTransactionEffects,
	_ColumnNameName[195:231]:      ColumnNameHighestKnownCheckpoint,
	_ColumnNameLowerName[195:231]: ColumnNameHighestKnownCheckpoint,
	_ColumnNameName[231:268]:      ColumnNameHighestSyncedCheckpoint,
	_ColumnNameLowerName[231:268]: ColumnNameHighestSyncedCheckpoint,
	_ColumnNameName[268:304]:      ColumnNameLastExecutedCheckpoint,
	_ColumnNameLowerName[268:304]: ColumnNameLastExecutedCheckpoint,
	_ColumnNameName[304:339]:      ColumnNameCheckpointExecBacklog,
	_ColumnNameLowerName[304:339]: ColumnNameCheckpointExecBacklog,
	_ColumnNameName[339:374]:      ColumnNameCheckpointSyncBacklog,
	_ColumnNameLowerName[339:374]: ColumnNameCheckpointSyncBacklog,
	_ColumnNameName[374:399]:      ColumnNameCurrentEpoch,
	_ColumnNameLowerName[374:399]: ColumnNameCurrentEpoch,
	_ColumnNameName[399:429]:      ColumnNameTXSyncPercentage,
	_ColumnNameLowerName[399:429]: ColumnNameTXSyncPercentage,
	_ColumnNameName[429:462]:      ColumnNameCheckSyncPercentage,
	_ColumnNameLowerName[429:462]: ColumnNameCheckSyncPercentage,
	_ColumnNameName[462:487]:      ColumnNameNetworkPeers,
	_ColumnNameLowerName[462:487]: ColumnNameNetworkPeers,
	_ColumnNameName[487:505]:      ColumnNameUptime,
	_ColumnNameLowerName[487:505]: ColumnNameUptime,
	_ColumnNameName[505:524]:      ColumnNameVersion,
	_ColumnNameLowerName[505:524]: ColumnNameVersion,
	_ColumnNameName[524:542]:      ColumnNameCommit,
	_ColumnNameLowerName[524:542]: ColumnNameCommit,
	_ColumnNameName[542:561]:      ColumnNameCountry,
	_ColumnNameLowerName[542:561]: ColumnNameCountry,
}

var _ColumnNameNames = []string{
	_ColumnNameName[0:18],
	_ColumnNameName[18:37],
	_ColumnNameName[37:57],
	_ColumnNameName[57:87],
	_ColumnNameName[87:116],
	_ColumnNameName[116:158],
	_ColumnNameName[158:195],
	_ColumnNameName[195:231],
	_ColumnNameName[231:268],
	_ColumnNameName[268:304],
	_ColumnNameName[304:339],
	_ColumnNameName[339:374],
	_ColumnNameName[374:399],
	_ColumnNameName[399:429],
	_ColumnNameName[429:462],
	_ColumnNameName[462:487],
	_ColumnNameName[487:505],
	_ColumnNameName[505:524],
	_ColumnNameName[524:542],
	_ColumnNameName[542:561],
}

// ColumnNameString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ColumnNameString(s string) (ColumnName, error) {
	if val, ok := _ColumnNameNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ColumnNameNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ColumnName values", s)
}

// ColumnNameValues returns all values of the enum
func ColumnNameValues() []ColumnName {
	return _ColumnNameValues
}

// ColumnNameStrings returns a slice of all String values of the enum
func ColumnNameStrings() []string {
	strs := make([]string, len(_ColumnNameNames))
	copy(strs, _ColumnNameNames)
	return strs
}

// IsAColumnName returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ColumnName) IsAColumnName() bool {
	for _, v := range _ColumnNameValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for ColumnName
func (i ColumnName) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for ColumnName
func (i *ColumnName) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("ColumnName should be a string, got %s", data)
	}

	var err error
	*i, err = ColumnNameString(s)
	return err
}
